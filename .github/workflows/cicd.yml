name: CI/CD Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  NPM_REGISTRY: 'https://npm.pkg.github.com'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Container registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  pull-and-run:
    runs-on: sit-virtual-machine
    needs: build-and-push-image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Container registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: latest

      - name: Setup Environment File
        run: |
          touch .env
          echo "NODE_ENV=production" >> .env
          echo "API_VERSION=${{ vars.API_VERSION }}" >> .env
          echo "PORT=${{ vars.PORT }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

      - name: Pull image and Run image from ${{ env.REGISTRY }}
        run: |
          docker pull ${{steps.meta.outputs.tags}}
          docker compose down
          docker compose up -d
          docker image prune -f

      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          always-auth: true
          token: ${{ secrets.GITHUB_TOKEN }}
          scope: ${{ github.repository_owner }}
          registry-url: ${{ env.NPM_REGISTRY }}

      - name: Auto Increment Semver Action
        uses: MCKanpolat/auto-semver-action@v1
        id: versioning
        with:
          releaseType: patch
          incrementPerCommit: false
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Client SDK (Typescript-Axios)
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: typescript-axios
          openapi-url: http://capstone23.sit.kmutt.ac.th/pl1/openapi-json
          config-file: openapi-generator.config.json
          command-args: |
            --additional-properties=npmVersion=${{ steps.versioning.outputs.version }}

      - name: Push Client SDK to Github
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.CLIENT_SDK_BOT_TOKEN }}
        with:
          source-directory: ./typescript-axios-client
          destination-github-username: ${{ github.repository_owner }}
          destination-repository-name: 'winwin-client-sdk'
          user-email: '${{ github.repository_owner }}@github.com'
          target-branch: main
