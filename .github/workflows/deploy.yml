name: Deploy on Self-hosted

on:
  workflow_run:
    workflows: ['Build and Publish Docker Image']
    branches: ['main']
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  pull-and-run:
    runs-on: sit-virtual-machine
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Container registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: latest

      - name: Setup Environment File
        run: |
          touch .env
          echo "NODE_ENV=production" >> .env
          echo "API_VERSION=${{ vars.API_VERSION }}" >> .env
          echo "PORT=${{ vars.PORT }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

      - name: Touch openapi.json
        run: |
          touch openapi.json

      - name: Pull image and Run image from ${{ env.REGISTRY }}
        run: |
          docker pull ${{steps.meta.outputs.tags}}
          docker compose up -d

      - name: Generate Client SDK (Node.js)
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: typescript-node
          openapi-file: openapi.json

      - name: Publish Client SDK (Node.js)
        uses: actions/upload-artifact@v3
        with:
          name: winwin-sdk
          path: ./typescript-node-client
